{"version":3,"file":"use-deep-compare-effect.umd.min.js","sources":["../node_modules/dequal/dist/index.mjs","../src/index.ts"],"sourcesContent":["var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import * as React from 'react'\nimport {dequal as deepEqual} from 'dequal'\n\ntype UseEffectParams = Parameters<typeof React.useEffect>\ntype EffectCallback = UseEffectParams[0]\ntype DependencyList = UseEffectParams[1]\n// yes, I know it's void, but I like what this communicates about\n// the intent of these functions: It's just like useEffect\ntype UseEffectReturn = ReturnType<typeof React.useEffect>\n\nfunction checkDeps(deps: DependencyList) {\n  if (!deps || !deps.length) {\n    throw new Error(\n      'useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.',\n    )\n  }\n  if (deps.every(isPrimitive)) {\n    throw new Error(\n      'useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.',\n    )\n  }\n}\n\nfunction isPrimitive(val: unknown) {\n  return val == null || /^[sbn]/.test(typeof val)\n}\n\nfunction useDeepCompareMemoize(value: DependencyList) {\n  const ref = React.useRef<DependencyList>()\n\n  if (!deepEqual(value, ref.current)) {\n    ref.current = value\n  }\n\n  return ref.current\n}\n\nfunction useDeepCompareEffect(\n  callback: EffectCallback,\n  dependencies: DependencyList,\n): UseEffectReturn {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies)\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(callback, useDeepCompareMemoize(dependencies))\n}\n\nexport function useDeepCompareEffectNoCheck(\n  callback: EffectCallback,\n  dependencies: DependencyList,\n): UseEffectReturn {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(callback, useDeepCompareMemoize(dependencies))\n}\n\nexport default useDeepCompareEffect\n"],"names":["has","Object","prototype","hasOwnProperty","find","iter","tar","key","_step","_iterator","_createForOfIteratorHelperLoose","keys","done","dequal","value","foo","bar","ctor","len","tmp","constructor","Date","getTime","RegExp","toString","Array","length","Set","size","_step2","_iterator2","Map","_step3","_iterator3","get","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","call","useDeepCompareMemoize","ref","React","useRef","deepEqual","current","callback","dependencies","useEffect"],"mappings":"44CAAA,IAAIA,EAAMC,OAAOC,UAAUC,eAE3B,SAASC,EAAKC,EAAMC,EAAKC,GACxB,IAAA,IAAyBC,EAAzBC,EAAAC,EAAYL,EAAKM,UAAQH,EAAAC,KAAAG,MACpBC,GAAAA,EADAN,EAAoBC,EAAAM,MACRR,GAAM,OAAOC,EAIxB,SAASM,EAAOE,EAAKC,GAC3B,IAAIC,EAAMC,EAAKC,EACf,GAAIJ,IAAQC,EAAK,OAAO,EAExB,GAAID,GAAOC,IAAQC,EAAKF,EAAIK,eAAiBJ,EAAII,YAAa,CAC7D,GAAIH,IAASI,KAAM,OAAON,EAAIO,YAAcN,EAAIM,UAChD,GAAIL,IAASM,OAAQ,OAAOR,EAAIS,aAAeR,EAAIQ,WAE/CP,GAAAA,IAASQ,MAAO,CACf,IAACP,EAAIH,EAAIW,UAAYV,EAAIU,OAC5B,KAAOR,KAASL,EAAOE,EAAIG,GAAMF,EAAIE,MAE/BA,OAAS,IAATA,EAGJD,GAAAA,IAASU,IAAK,CACjB,GAAIZ,EAAIa,OAASZ,EAAIY,KACpB,OAAO,EAER,IAAA,IAAiBC,EAAjBC,EAAApB,EAAYK,KAAKc,EAAAC,KAAAlB,MAAA,CAEhB,IADAO,EADID,EAAYW,EAAAf,QAEU,iBAARK,KACjBA,EAAMf,EAAKY,EAAKG,IACN,OAAO,EAEd,IAACH,EAAIhB,IAAImB,GAAM,OAAO,EAE3B,OAAO,EAGJF,GAAAA,IAASc,IAAK,CACjB,GAAIhB,EAAIa,OAASZ,EAAIY,KACpB,OAAO,EAER,IAAA,IAAiBI,EAAjBC,EAAAvB,EAAYK,KAAKiB,EAAAC,KAAArB,MAAA,CAEhB,IADAO,GADID,EAAYc,EAAAlB,OACN,KACgB,iBAARK,KACjBA,EAAMf,EAAKY,EAAKG,IACN,OAAO,EAElB,IAAKN,EAAOK,EAAI,GAAIF,EAAIkB,IAAIf,IAC3B,OAAO,EAGT,OAAO,EAGJF,GAAAA,IAASkB,YACZpB,EAAM,IAAIqB,WAAWrB,GACrBC,EAAM,IAAIoB,WAAWpB,QACf,GAAIC,IAASoB,SAAU,CACzB,IAACnB,EAAIH,EAAIuB,cAAgBtB,EAAIsB,WAChC,KAAOpB,KAASH,EAAIwB,QAAQrB,KAASF,EAAIuB,QAAQrB,KAE3CA,OAAS,IAATA,EAGR,GAAIiB,YAAYK,OAAOzB,GAAM,CACxB,IAACG,EAAIH,EAAIuB,cAAgBtB,EAAIsB,WACzBpB,KAAAA,KAASH,EAAIG,KAASF,EAAIE,KAE3BA,OAAS,IAATA,EAGR,IAAKD,GAAuB,iBAARF,EAAkB,CAEhCE,IAAAA,KADLC,EAAM,EACOH,EAAK,CACbf,GAAAA,EAAIyC,KAAK1B,EAAKE,MAAWC,IAAQlB,EAAIyC,KAAKzB,EAAKC,GAAO,OAAO,EAC7D,KAAEA,KAAQD,KAASH,EAAOE,EAAIE,GAAOD,EAAIC,IAAQ,OAAO,EAEtDhB,OAAAA,OAAOU,KAAKK,GAAKU,SAAWR,GAIrC,OAAOH,GAAQA,GAAOC,GAAQA,ECvD/B,SAAS0B,EAAsB5B,GAC7B,IAAM6B,EAAMC,EAAMC,SAMXF,OAJFG,EAAUhC,EAAO6B,EAAII,WACxBJ,EAAII,QAAUjC,GAGT6B,EAAII,kBAGb,SACEC,EACAC,GAMAL,EAAMM,UAAUF,EAAUN,EAAsBO,mCAG3C,SACLD,EACAC,GAGAL,EAAMM,UAAUF,EAAUN,EAAsBO"}